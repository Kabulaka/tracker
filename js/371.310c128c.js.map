{"version":3,"file":"js/371.310c128c.js","mappings":"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","sources":["webpack://log-tracker/../src/dagre-wrapper/markers.js","webpack://log-tracker/../src/dagre-wrapper/createLabel.js","webpack://log-tracker/../src/dagre-wrapper/shapes/util.js","webpack://log-tracker/../src/dagre-wrapper/intersect/intersect-node.js","webpack://log-tracker/../src/dagre-wrapper/intersect/intersect-ellipse.js","webpack://log-tracker/../src/dagre-wrapper/intersect/intersect-circle.js","webpack://log-tracker/../src/dagre-wrapper/intersect/intersect-line.js","webpack://log-tracker/../src/dagre-wrapper/intersect/intersect-polygon.js","webpack://log-tracker/../src/dagre-wrapper/intersect/intersect-rect.js","webpack://log-tracker/../src/dagre-wrapper/intersect/index.js","webpack://log-tracker/../src/dagre-wrapper/shapes/note.js","webpack://log-tracker/../src/dagre-wrapper/nodes.js","webpack://log-tracker/../src/dagre-wrapper/edges.js","webpack://log-tracker/../src/diagrams/class/svgDraw.js"],"sourcesContent":["/** Setup arrow head and define the marker. The result is appended to the svg. */\n\nimport { log } from '../logger';\n\n// Only add the number of markers that the diagram needs\nconst insertMarkers = (elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n};\n\nconst extension = (elem, type, id) => {\n  log.trace('Making markers for ', id);\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionStart')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,7 L18,13 V 1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionEnd')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,1 V 13 L18,7 Z'); // this is actual shape for arrowhead\n};\n\nconst composition = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionStart')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionEnd')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst aggregation = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationStart')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationEnd')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst dependency = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyStart')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyEnd')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\nconst lollipop = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-lollipopStart')\n    .attr('class', 'marker lollipop ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('stroke', 'black')\n    .attr('fill', 'white')\n    .attr('cx', 6)\n    .attr('cy', 7)\n    .attr('r', 6);\n};\nconst point = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-pointEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 12 20')\n    .attr('refX', 10)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  elem\n    .append('marker')\n    .attr('id', type + '-pointStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 0)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 5 L 10 10 L 10 0 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst circle = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-circleEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 11)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-circleStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', -1)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst cross = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-crossEnd')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', 12)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-crossStart')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', -1)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n};\nconst barb = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-barbEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 14)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 19,7 L9,13 L14,7 L9,1 Z');\n};\n\n// TODO rename the class diagram markers to something shape descriptive and semantic free\nconst markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  lollipop,\n  point,\n  circle,\n  cross,\n  barb,\n};\nexport default insertMarkers;\n","import { select } from 'd3';\nimport { log } from '../logger';\nimport { getConfig } from '../config';\nimport { evaluate } from '../diagrams/common/common';\nimport { decodeEntities } from '../mermaidAPI';\n\n/**\n * @param dom\n * @param styleFn\n */\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\n/**\n * @param {any} node\n * @returns {SVGForeignObjectElement} Node\n */\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject'));\n  const div = fo.append('xhtml:div');\n\n  const label = node.label;\n  const labelClass = node.isNode ? 'nodeLabel' : 'edgeLabel';\n  div.html(\n    '<span class=\"' +\n      labelClass +\n      '\" ' +\n      (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : '') +\n      '>' +\n      label +\n      '</span>'\n  );\n\n  applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n  return fo.node();\n}\n/**\n * @param _vertexText\n * @param style\n * @param isTitle\n * @param isNode\n * @deprecated svg-util/createText instead\n */\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || '';\n  if (typeof vertexText === 'object') {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n    vertexText = vertexText.replace(/\\\\n|\\n/g, '<br />');\n    log.info('vertexText' + vertexText);\n    const node = {\n      isNode,\n      label: decodeEntities(vertexText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(':', ' ')}'></i>`\n      ),\n      labelStyle: style.replace('fill:', 'color:'),\n    };\n    let vertexNode = addHtmlLabel(node);\n    // vertexNode.parentNode.removeChild(vertexNode);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    svgLabel.setAttribute('style', style.replace('color:', 'fill:'));\n    let rows = [];\n    if (typeof vertexText === 'string') {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n\n    for (const row of rows) {\n      const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n      tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n      tspan.setAttribute('dy', '1em');\n      tspan.setAttribute('x', '0');\n      if (isTitle) {\n        tspan.setAttribute('class', 'title-row');\n      } else {\n        tspan.setAttribute('class', 'row');\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n};\n\nexport default createLabel;\n","import createLabel from '../createLabel';\nimport { createText } from '../../rendering-util/createText';\nimport { getConfig } from '../../config';\nimport { decodeEntities } from '../../mermaidAPI';\nimport { select } from 'd3';\nimport { evaluate, sanitizeText } from '../../diagrams/common/common';\nexport const labelHelper = (parent, node, _classes, isNode) => {\n  let classes;\n  const useHtmlLabels = node.useHtmlLabels || evaluate(getConfig().flowchart.htmlLabels);\n  if (!_classes) {\n    classes = 'node default';\n  } else {\n    classes = _classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the label and insert it after the rect\n  const label = shapeSvg.insert('g').attr('class', 'label').attr('style', node.labelStyle);\n\n  // Replace labelText with default value if undefined\n  let labelText;\n  if (node.labelText === undefined) {\n    labelText = '';\n  } else {\n    labelText = typeof node.labelText === 'string' ? node.labelText : node.labelText[0];\n  }\n\n  const textNode = label.node();\n  let text;\n  if (node.labelType === 'markdown') {\n    // text = textNode;\n    text = createText(label, sanitizeText(decodeEntities(labelText), getConfig()), {\n      useHtmlLabels,\n      width: node.width || getConfig().flowchart.wrappingWidth,\n      classes: 'markdown-node-label',\n    });\n  } else {\n    text = textNode.appendChild(\n      createLabel(\n        sanitizeText(decodeEntities(labelText), getConfig()),\n        node.labelStyle,\n        false,\n        isNode\n      )\n    );\n  }\n\n  // Get the size of the label\n  let bbox = text.getBBox();\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n\n  const halfPadding = node.padding / 2;\n\n  // Center the label\n  if (useHtmlLabels) {\n    label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n  } else {\n    label.attr('transform', 'translate(' + 0 + ', ' + -bbox.height / 2 + ')');\n  }\n  if (node.centerLabel) {\n    label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n  }\n  label.insert('rect', ':first-child');\n  return { shapeSvg, bbox, halfPadding, label };\n};\n\nexport const updateNodeBounds = (node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n};\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nexport function insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('class', 'label-container')\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n","/**\n * @param node\n * @param point\n */\nfunction intersectNode(node, point) {\n  // console.info('Intersect Node');\n  return node.intersect(point);\n}\n\nexport default intersectNode;\n","/**\n * @param node\n * @param rx\n * @param ry\n * @param point\n */\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: https://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\nexport default intersectEllipse;\n","import intersectEllipse from './intersect-ellipse';\n\n/**\n * @param node\n * @param rx\n * @param point\n */\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\nexport default intersectCircle;\n","/**\n * Returns the point at which two lines, p and q, intersect or returns undefined if they do not intersect.\n *\n * @param p1\n * @param p2\n * @param q1\n * @param q2\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\n/**\n * @param r1\n * @param r2\n */\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\nexport default intersectLine;\n","/* eslint \"no-console\": off */\n\nimport intersectLine from './intersect-line';\n\nexport default intersectPolygon;\n\n/**\n * Returns the point ({x, y}) at which the point argument intersects with the node argument assuming\n * that it has the shape specified by polygon.\n *\n * @param node\n * @param polyPoints\n * @param point\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === 'function') {\n    polyPoints.forEach(function (entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    // console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","const intersectRect = (node, point) => {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // https://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n};\n\nexport default intersectRect;\n","/*\n * Borrowed with love from from dagre-d3. Many thanks to cpettitt!\n */\n\nimport node from './intersect-node.js';\nimport circle from './intersect-circle.js';\nimport ellipse from './intersect-ellipse.js';\nimport polygon from './intersect-polygon.js';\nimport rect from './intersect-rect.js';\n\nexport default {\n  node,\n  circle,\n  ellipse,\n  polygon,\n  rect,\n};\n","import { updateNodeBounds, labelHelper } from './util';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport intersect from '../intersect/index.js';\n\nconst note = (parent, node) => {\n  const useHtmlLabels = node.useHtmlLabels || getConfig().flowchart.htmlLabels;\n  if (!useHtmlLabels) {\n    node.centerLabel = true;\n  }\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.info('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  rect\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nexport default note;\n","import { select } from 'd3';\nimport { log } from '../logger';\nimport { labelHelper, updateNodeBounds, insertPolygonShape } from './shapes/util';\nimport { getConfig } from '../config';\nimport intersect from './intersect/index.js';\nimport createLabel from './createLabel';\nimport note from './shapes/note';\nimport { parseMember } from '../diagrams/class/svgDraw';\nimport { evaluate } from '../diagrams/common/common';\n\nconst question = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n\n  log.info('Question main (Circle)');\n\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr('style', node.style);\n  updateNodeBounds(node, questionElem);\n\n  node.intersect = function (point) {\n    log.warn('Intersect called');\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst choice = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 },\n  ];\n\n  const choice = shapeSvg.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (d) {\n        return d.x + ',' + d.y;\n      })\n      .join(' ')\n  );\n  // center the circle around its coordinate\n  choice.attr('class', 'state-start').attr('r', 7).attr('width', 28).attr('height', 28);\n  node.width = 28;\n  node.height = 28;\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 14, point);\n  };\n\n  return shapeSvg;\n};\n\nconst hexagon = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr('style', node.style);\n  updateNodeBounds(node, hex);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_left_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n\n  node.width = w + h;\n  node.height = h;\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_right = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_left = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst inv_trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_right_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst cylinder = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const el = shapeSvg\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('style', node.style)\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    const pos = intersect.rect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjusted value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n};\n\nconst rect = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // const totalWidth = bbox.width + node.padding * 2;\n  // const totalHeight = bbox.height + node.padding * 2;\n  const totalWidth = bbox.width + node.padding;\n  const totalHeight = bbox.height + node.padding;\n  rect\n    .attr('class', 'basic label-container')\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    // .attr('x', -bbox.width / 2 - node.padding)\n    // .attr('y', -bbox.height / 2 - node.padding)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', totalWidth)\n    .attr('height', totalHeight);\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst labelRect = (parent, node) => {\n  const { shapeSvg } = labelHelper(parent, node, 'label', true);\n\n  log.trace('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // Hide the rect we are only after the label\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect.attr('width', totalWidth).attr('height', totalHeight);\n  shapeSvg.attr('class', 'label edgeLabel');\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\n/**\n * @param rect\n * @param borders\n * @param totalWidth\n * @param totalHeight\n */\nfunction applyNodePropertyBorders(rect, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = (length) => {\n    strokeDashArray.push(length, 0);\n  };\n  const skipBorder = (length) => {\n    strokeDashArray.push(0, length);\n  };\n  if (borders.includes('t')) {\n    log.debug('add top border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('r')) {\n    log.debug('add right border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes('b')) {\n    log.debug('add bottom border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('l')) {\n    log.debug('add left border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect.attr('stroke-dasharray', strokeDashArray.join(' '));\n}\n\nconst rectWithTitle = (parent, node) => {\n  // const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes);\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  // const innerRect = shapeSvg.insert('rect');\n  const innerLine = shapeSvg.insert('line');\n\n  const label = shapeSvg.insert('g').attr('class', 'label');\n\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  // const text2 = typeof text2prim === 'object' ? text2prim[0] : text2prim;\n\n  let title = '';\n  if (typeof text2 === 'object') {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info('Label text abc79', title, text2, typeof text2 === 'object');\n\n  const text = label.node().appendChild(createLabel(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  log.info('Text 2', text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label\n    .node()\n    .appendChild(\n      createLabel(textRows.join ? textRows.join('<br/>') : textRows, node.labelStyle, true, true)\n    );\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  // bbox = label.getBBox();\n  // log.info(descr);\n  const halfPadding = node.padding / 2;\n  select(descr).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) +\n      ', ' +\n      (titleBox.height + halfPadding + 5) +\n      ')'\n  );\n  select(text).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) +\n      ', ' +\n      0 +\n      ')'\n  );\n  // Get the size of the label\n\n  // Bounding box for title and text\n  bbox = label.node().getBBox();\n\n  // Center the label\n  label.attr(\n    'transform',\n    'translate(' + -bbox.width / 2 + ', ' + (-bbox.height / 2 - halfPadding + 3) + ')'\n  );\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  innerLine\n    .attr('class', 'divider')\n    .attr('x1', -bbox.width / 2 - halfPadding)\n    .attr('x2', bbox.width / 2 + halfPadding)\n    .attr('y1', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding)\n    .attr('y2', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst stadium = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n\n  // add the rect\n  const rect = shapeSvg\n    .insert('rect', ':first-child')\n    .attr('style', node.style)\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst circle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('Circle main');\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    log.info('Circle intersect', node, bbox.width / 2 + halfPadding, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point);\n  };\n\n  return shapeSvg;\n};\n\nconst doublecircle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const gap = 5;\n  const circleGroup = shapeSvg.insert('g', ':first-child');\n  const outerCircle = circleGroup.insert('circle');\n  const innerCircle = circleGroup.insert('circle');\n\n  // center the circle around its coordinate\n  outerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding + gap)\n    .attr('width', bbox.width + node.padding + gap * 2)\n    .attr('height', bbox.height + node.padding + gap * 2);\n\n  innerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('DoubleCircle main');\n\n  updateNodeBounds(node, outerCircle);\n\n  node.intersect = function (point) {\n    log.info('DoubleCircle intersect', node, bbox.width / 2 + halfPadding + gap, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point);\n  };\n\n  return shapeSvg;\n};\n\nconst subroutine = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst start = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst forkJoin = (parent, node, dir) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  let width = 70;\n  let height = 10;\n\n  if (dir === 'LR') {\n    width = 10;\n    height = 70;\n  }\n\n  const shape = shapeSvg\n    .append('rect')\n    .attr('x', (-1 * width) / 2)\n    .attr('y', (-1 * height) / 2)\n    .attr('width', width)\n    .attr('height', height)\n    .attr('class', 'fork-join');\n\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst end = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const innerCircle = shapeSvg.insert('circle', ':first-child');\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  innerCircle.attr('class', 'state-end').attr('r', 5).attr('width', 10).attr('height', 10);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst class_box = (parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  const topLine = shapeSvg.insert('line');\n  const bottomLine = shapeSvg.insert('line');\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n\n  const labelContainer = shapeSvg.insert('g').attr('class', 'label');\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\n\n  // 1. Create the labels\n  const interfaceLabelText = node.classData.annotations[0]\n    ? '«' + node.classData.annotations[0] + '»'\n    : '';\n  const interfaceLabel = labelContainer\n    .node()\n    .appendChild(createLabel(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr('width', interfaceBBox.width);\n    dv.attr('height', interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n\n  let classTitleString = node.classData.label;\n\n  if (node.classData.type !== undefined && node.classData.type !== '') {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += '&lt;' + node.classData.type + '&gt;';\n    } else {\n      classTitleString += '<' + node.classData.type + '>';\n    }\n  }\n  const classTitleLabel = labelContainer\n    .node()\n    .appendChild(createLabel(classTitleString, node.labelStyle, true, true));\n  select(classTitleLabel).attr('class', 'classTitle');\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr('width', classTitleBBox.width);\n    dv.attr('height', classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          parsedText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  const classMethods = [];\n  node.classData.methods.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          displayText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n\n    classMethods.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  // 2. Position the labels\n\n  // position the interface label\n  if (hasInterface) {\n    let diffX = (maxWidth - interfaceBBox.width) / 2;\n    select(interfaceLabel).attr(\n      'transform',\n      'translate( ' + ((-1 * maxWidth) / 2 + diffX) + ', ' + (-1 * maxHeight) / 2 + ')'\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  // Position the class title label\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select(classTitleLabel).attr(\n    'transform',\n    'translate( ' +\n      ((-1 * maxWidth) / 2 + diffX) +\n      ', ' +\n      ((-1 * maxHeight) / 2 + verticalPos) +\n      ')'\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n\n  topLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classAttributes.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' +\n        -maxWidth / 2 +\n        ', ' +\n        ((-1 * maxHeight) / 2 + verticalPos + lineHeight / 2) +\n        ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  verticalPos += lineHeight;\n  bottomLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classMethods.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' + -maxWidth / 2 + ', ' + ((-1 * maxHeight) / 2 + verticalPos) + ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -maxWidth / 2 - halfPadding)\n    .attr('y', -(maxHeight / 2) - halfPadding)\n    .attr('width', maxWidth + node.padding)\n    .attr('height', maxHeight + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst shapes = {\n  rhombus: question,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box,\n};\n\nlet nodeElems = {};\n\nexport const insertNode = (elem, node, dir) => {\n  let newEl;\n  let el;\n\n  // Add link when appropriate\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === 'sandbox') {\n      target = '_top';\n    } else if (node.linkTarget) {\n      target = node.linkTarget || '_blank';\n    }\n    newEl = elem.insert('svg:a').attr('xlink:href', node.link).attr('target', target);\n    el = shapes[node.shape](newEl, node, dir);\n  } else {\n    el = shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr('title', node.tooltip);\n  }\n  if (node.class) {\n    el.attr('class', 'node default ' + node.class);\n  }\n\n  nodeElems[node.id] = newEl;\n\n  if (node.haveCallback) {\n    nodeElems[node.id].attr('class', nodeElems[node.id].attr('class') + ' clickable');\n  }\n  return newEl;\n};\nexport const setNodeElem = (elem, node) => {\n  nodeElems[node.id] = elem;\n};\nexport const clear = () => {\n  nodeElems = {};\n};\n\nexport const positionNode = (node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    'Transforming node',\n    node.diff,\n    node,\n    'translate(' + (node.x - node.width / 2 - 5) + ', ' + node.width / 2 + ')'\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      'transform',\n      'translate(' +\n        (node.x + diff - node.width / 2) +\n        ', ' +\n        (node.y - node.height / 2 - padding) +\n        ')'\n    );\n  } else {\n    el.attr('transform', 'translate(' + node.x + ', ' + node.y + ')');\n  }\n  return diff;\n};\n","import { log } from '../logger';\nimport createLabel from './createLabel';\nimport { createText } from '../rendering-util/createText';\nimport { line, curveBasis, select } from 'd3';\nimport { getConfig } from '../config';\nimport utils from '../utils';\nimport { evaluate } from '../diagrams/common/common';\n\nlet edgeLabels = {};\nlet terminalLabels = {};\n\nexport const clear = () => {\n  edgeLabels = {};\n  terminalLabels = {};\n};\n\nexport const insertEdgeLabel = (elem, edge) => {\n  const useHtmlLabels = evaluate(getConfig().flowchart.htmlLabels);\n  // Create the actual text element\n  const labelElement =\n    edge.labelType === 'markdown'\n      ? createText(elem, edge.label, {\n          style: edge.labelStyle,\n          useHtmlLabels,\n          addSvgBackground: true,\n        })\n      : createLabel(edge.label, edge.labelStyle);\n  log.info('abc82', edge, edge.labelType);\n\n  // Create outer g, edgeLabel, this will be positioned after graph layout\n  const edgeLabel = elem.insert('g').attr('class', 'edgeLabel');\n\n  // Create inner g, label, this will be positioned now for centering the text\n  const label = edgeLabel.insert('g').attr('class', 'label');\n  label.node().appendChild(labelElement);\n\n  // Center the label\n  let bbox = labelElement.getBBox();\n  if (useHtmlLabels) {\n    const div = labelElement.children[0];\n    const dv = select(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  // Make element accessible by id for positioning\n  edgeLabels[edge.id] = edgeLabel;\n\n  // Update the abstract data of the edge with the new information about its width and height\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n\n  let fo;\n  if (edge.startLabelLeft) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelRight.insert('g').attr('class', 'inner');\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelRight.insert('g').attr('class', 'inner');\n\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n  return labelElement;\n};\n\n/**\n * @param {any} fo\n * @param {any} value\n */\nfunction setTerminalWidth(fo, value) {\n  if (getConfig().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + 'px';\n    fo.style.height = '12px';\n  }\n}\n\nexport const positionEdgeLabel = (edge, paths) => {\n  log.info('Moving label abc78 ', edge.id, edge.label, edgeLabels[edge.id]);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      //   // debugger;\n      const pos = utils.calcLabelPosition(path);\n      log.info(\n        'Moving label ' + edge.label + ' from (',\n        x,\n        ',',\n        y,\n        ') to (',\n        pos.x,\n        ',',\n        pos.y,\n        ') abc78'\n      );\n      if (paths.updatedPath) {\n        x = pos.x;\n        y = pos.y;\n      }\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n\n  //let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, 'start_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        'start_right',\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_right', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n};\n\nconst outsideNode = (node, point) => {\n  // log.warn('Checking bounds ', node, point);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point.x - x);\n  const dy = Math.abs(point.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n};\n\nexport const intersection = (node, outsidePoint, insidePoint) => {\n  log.warn(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n\n  const dx = Math.abs(x - insidePoint.x);\n  // const dy = Math.abs(y - insidePoint.y);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n\n  // const edges = {\n  //   x1: x - w,\n  //   x2: x + w,\n  //   y1: y - h,\n  //   y2: y + h\n  // };\n\n  // if (\n  //   outsidePoint.x === edges.x1 ||\n  //   outsidePoint.x === edges.x2 ||\n  //   outsidePoint.y === edges.y1 ||\n  //   outsidePoint.y === edges.y2\n  // ) {\n  //   log.warn('abc89 calc equals on edge', outsidePoint, edges);\n  //   return outsidePoint;\n  // }\n\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  // log.warn();\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\n    // Intersection is top or bottom of rect.\n    // let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = (R * q) / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q,\n    };\n\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n\n    log.warn(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n\n    return res;\n  } else {\n    // Intersection onn sides of rect\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      // r = outsidePoint.x - w - x;\n      r = x - w - outsidePoint.x;\n    }\n    let q = (Q * r) / R;\n    //  OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x + dx - w;\n    // OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    // let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    log.warn(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n\n    return { x: _x, y: _y };\n  }\n};\n/**\n * This function will page a path and node where the last point(s) in the path is inside the node\n * and return an update path ending by the border of the node.\n *\n * @param {Array} _points\n * @param {any} boundryNode\n * @returns {Array} Points\n */\nconst cutPathAtIntersect = (_points, boundryNode) => {\n  log.warn('abc88 cutPathAtIntersect', _points, boundryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point) => {\n    // const node = clusterDb[edge.toCluster].node;\n    log.info('abc88 checking point', point, boundryNode);\n\n    // check if point is inside the boundary rect\n    if (!outsideNode(boundryNode, point) && !isInside) {\n      // First point inside the rect found\n      // Calc the intersection coord between the point anf the last point outside the rect\n      const inter = intersection(boundryNode, lastPointOutside, point);\n      log.warn('abc88 inside', point, lastPointOutside, inter);\n      log.warn('abc88 intersection', inter);\n\n      // // Check case where the intersection is the same as the last point\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n      });\n      // // if (!pointPresent) {\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      } else {\n        log.warn('abc88 no intersect', inter, points);\n      }\n      // points.push(inter);\n      isInside = true;\n    } else {\n      // Outside\n      log.warn('abc88 outside', point, lastPointOutside);\n      lastPointOutside = point;\n      // points.push(point);\n      if (!isInside) {\n        points.push(point);\n      }\n    }\n  });\n  log.warn('abc88 returning points', points);\n  return points;\n};\n\n//(edgePaths, e, edge, clusterDb, diagramtype, graph)\nexport const insertEdge = function (elem, e, edge, clusterDb, diagramType, graph) {\n  let points = edge.points;\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n\n  log.info('abc88 InsertEdge: ', edge);\n  if (head.intersect && tail.intersect) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    log.info(\n      'Last point',\n      points[points.length - 1],\n      head,\n      head.intersect(points[points.length - 1])\n    );\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    log.info('to cluster abc88', clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    // log.trace('edge', edge);\n    // points = [];\n    // let lastPointOutside; // = edge.points[0];\n    // let isInside = false;\n    // edge.points.forEach(point => {\n    //   const node = clusterDb[edge.toCluster].node;\n    //   log.warn('checking from', edge.fromCluster, point, node);\n\n    //   if (!outsideNode(node, point) && !isInside) {\n    //     log.trace('inside', edge.toCluster, point, lastPointOutside);\n\n    //     // First point inside the rect\n    //     const inter = intersection(node, lastPointOutside, point);\n\n    //     let pointPresent = false;\n    //     points.forEach(p => {\n    //       pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n    //     });\n    //     // if (!pointPresent) {\n    //     if (!points.find(e => e.x === inter.x && e.y === inter.y)) {\n    //       points.push(inter);\n    //     } else {\n    //       log.warn('no intersect', inter, points);\n    //     }\n    //     isInside = true;\n    // } else {\n    //   // outside\n    //   lastPointOutside = point;\n    //   if (!isInside) points.push(point);\n    // }\n    // });\n    pointsHasChanged = true;\n  }\n\n  if (edge.fromCluster) {\n    log.info('from cluster abc88', clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n\n    pointsHasChanged = true;\n  }\n\n  // The data for our line\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n\n  // This is the accessor function we talked about above\n  let curve;\n  // Currently only flowcharts get the curve from the settings, perhaps this should\n  // be expanded to a common setting? Restricting it for now in order not to cause side-effects that\n  // have not been thought through\n  if (diagramType === 'graph' || diagramType === 'flowchart') {\n    curve = edge.curve || curveBasis;\n  } else {\n    curve = curveBasis;\n  }\n  // curve = curveLinear;\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curve);\n\n  // Construct stroke classes based on properties\n  let strokeClasses;\n  switch (edge.thickness) {\n    case 'normal':\n      strokeClasses = 'edge-thickness-normal';\n      break;\n    case 'thick':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    case 'invisible':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    default:\n      strokeClasses = '';\n  }\n  switch (edge.pattern) {\n    case 'solid':\n      strokeClasses += ' edge-pattern-solid';\n      break;\n    case 'dotted':\n      strokeClasses += ' edge-pattern-dotted';\n      break;\n    case 'dashed':\n      strokeClasses += ' edge-pattern-dashed';\n      break;\n  }\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', edge.id)\n    .attr('class', ' ' + strokeClasses + (edge.classes ? ' ' + edge.classes : ''))\n    .attr('style', edge.style);\n\n  // DEBUG code, adds a red circle at each edge coordinate\n  // edge.points.forEach((point) => {\n  //   elem\n  //     .append('circle')\n  //     .style('stroke', 'red')\n  //     .style('fill', 'red')\n  //     .attr('r', 1)\n  //     .attr('cx', point.x)\n  //     .attr('cy', point.y);\n  // });\n\n  let url = '';\n  // // TODO: Can we load this config only from the rendered graph type?\n  if (getConfig().flowchart.arrowMarkerAbsolute || getConfig().state.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n  log.info('arrowTypeStart', edge.arrowTypeStart);\n  log.info('arrowTypeEnd', edge.arrowTypeEnd);\n\n  switch (edge.arrowTypeStart) {\n    case 'arrow_cross':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-crossStart' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-pointStart' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-barbStart' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-circleStart' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-aggregationStart' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-extensionStart' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-compositionStart' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-dependencyStart' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-lollipopStart' + ')');\n      break;\n    default:\n  }\n  switch (edge.arrowTypeEnd) {\n    case 'arrow_cross':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-crossEnd' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-pointEnd' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-barbEnd' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-circleEnd' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-aggregationEnd' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-extensionEnd' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-compositionEnd' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-dependencyEnd' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-lollipopEnd' + ')');\n      break;\n    default:\n  }\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n};\n","import { line, curveBasis } from 'd3';\nimport utils from '../../utils';\nimport { log } from '../../logger';\nimport { parseGenericTypes } from '../common/common';\n\nlet edgeCount = 0;\nexport const drawEdge = function (elem, path, relation, conf, diagObj) {\n  const getRelationType = function (type) {\n    switch (type) {\n      case diagObj.db.relationType.AGGREGATION:\n        return 'aggregation';\n      case diagObj.db.relationType.EXTENSION:\n        return 'extension';\n      case diagObj.db.relationType.COMPOSITION:\n        return 'composition';\n      case diagObj.db.relationType.DEPENDENCY:\n        return 'dependency';\n      case diagObj.db.relationType.LOLLIPOP:\n        return 'lollipop';\n    }\n  };\n\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n\n  // The data for our line\n  const lineData = path.points;\n\n  // This is the accessor function we talked about above\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', 'edge' + edgeCount)\n    .attr('class', 'relation');\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  if (relation.relation.lineType == 1) {\n    svgPath.attr('class', 'relation dashed-line');\n  }\n  if (relation.relation.lineType == 10) {\n    svgPath.attr('class', 'relation dotted-line');\n  }\n  if (relation.relation.type1 !== 'none') {\n    svgPath.attr(\n      'marker-start',\n      'url(' + url + '#' + getRelationType(relation.relation.type1) + 'Start' + ')'\n    );\n  }\n  if (relation.relation.type2 !== 'none') {\n    svgPath.attr(\n      'marker-end',\n      'url(' + url + '#' + getRelationType(relation.relation.type2) + 'End' + ')'\n    );\n  }\n\n  let x, y;\n  const l = path.points.length;\n  // Calculate Label position\n  let labelPosition = utils.calcLabelPosition(path.points);\n  x = labelPosition.x;\n  y = labelPosition.y;\n\n  let p1_card_x, p1_card_y;\n  let p2_card_x, p2_card_y;\n\n  if (l % 2 !== 0 && l > 1) {\n    let cardinality_1_point = utils.calcCardinalityPosition(\n      relation.relation.type1 !== 'none',\n      path.points,\n      path.points[0]\n    );\n    let cardinality_2_point = utils.calcCardinalityPosition(\n      relation.relation.type2 !== 'none',\n      path.points,\n      path.points[l - 1]\n    );\n\n    log.debug('cardinality_1_point ' + JSON.stringify(cardinality_1_point));\n    log.debug('cardinality_2_point ' + JSON.stringify(cardinality_2_point));\n\n    p1_card_x = cardinality_1_point.x;\n    p1_card_y = cardinality_1_point.y;\n    p2_card_x = cardinality_2_point.x;\n    p2_card_y = cardinality_2_point.y;\n  }\n\n  if (relation.title !== undefined) {\n    const g = elem.append('g').attr('class', 'classLabel');\n    const label = g\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('fill', 'red')\n      .attr('text-anchor', 'middle')\n      .text(relation.title);\n\n    window.label = label;\n    const bounds = label.node().getBBox();\n\n    g.insert('rect', ':first-child')\n      .attr('class', 'box')\n      .attr('x', bounds.x - conf.padding / 2)\n      .attr('y', bounds.y - conf.padding / 2)\n      .attr('width', bounds.width + conf.padding)\n      .attr('height', bounds.height + conf.padding);\n  }\n\n  log.info('Rendering relation ' + JSON.stringify(relation));\n  if (relation.relationTitle1 !== undefined && relation.relationTitle1 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type1')\n      .attr('x', p1_card_x)\n      .attr('y', p1_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle1);\n  }\n  if (relation.relationTitle2 !== undefined && relation.relationTitle2 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type2')\n      .attr('x', p2_card_x)\n      .attr('y', p2_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle2);\n  }\n\n  edgeCount++;\n};\n\n/**\n * Renders a class diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param classDef\n * @param conf\n * @param diagObj\n * @todo Add more information in the JSDOC here\n */\nexport const drawClass = function (elem, classDef, conf, diagObj) {\n  log.debug('Rendering class ', classDef, conf);\n\n  const id = classDef.id;\n  const classInfo = {\n    id: id,\n    label: classDef.id,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', diagObj.db.lookUpDomId(id)).attr('class', 'classGroup');\n\n  // add title\n  let title;\n  if (classDef.link) {\n    title = g\n      .append('svg:a')\n      .attr('xlink:href', classDef.link)\n      .attr('target', classDef.linkTarget)\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  } else {\n    title = g\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  }\n\n  // add annotations\n  let isFirst = true;\n  classDef.annotations.forEach(function (member) {\n    const titleText2 = title.append('tspan').text('«' + member + '»');\n    if (!isFirst) {\n      titleText2.attr('dy', conf.textHeight);\n    }\n    isFirst = false;\n  });\n\n  let classTitleString = classDef.id;\n\n  if (classDef.type !== undefined && classDef.type !== '') {\n    classTitleString += '<' + classDef.type + '>';\n  }\n\n  const classTitle = title.append('tspan').text(classTitleString).attr('class', 'title');\n\n  // If class has annotations the title needs to have an offset of the text height\n  if (!isFirst) {\n    classTitle.attr('dy', conf.textHeight);\n  }\n\n  const titleHeight = title.node().getBBox().height;\n\n  const membersLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin / 2)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin / 2);\n\n  const members = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + conf.dividerMargin + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n  classDef.members.forEach(function (member) {\n    addTspan(members, member, isFirst, conf);\n    isFirst = false;\n  });\n\n  const membersBox = members.node().getBBox();\n\n  const methodsLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin + membersBox.height)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin + membersBox.height);\n\n  const methods = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n\n  classDef.methods.forEach(function (method) {\n    addTspan(methods, method, isFirst, conf);\n    isFirst = false;\n  });\n\n  const classBox = g.node().getBBox();\n  var cssClassStr = ' ';\n\n  if (classDef.cssClasses.length > 0) {\n    cssClassStr = cssClassStr + classDef.cssClasses.join(' ');\n  }\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', classBox.width + 2 * conf.padding)\n    .attr('height', classBox.height + conf.padding + 0.5 * conf.dividerMargin)\n    .attr('class', cssClassStr);\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  title.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  if (classDef.tooltip) {\n    title.insert('title').text(classDef.tooltip);\n  }\n\n  membersLine.attr('x2', rectWidth);\n  methodsLine.attr('x2', rectWidth);\n\n  classInfo.width = rectWidth;\n  classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n\n  return classInfo;\n};\n\n/**\n * Renders a note diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param {{id: string; text: string; class: string;}} note\n * @param conf\n * @param diagObj\n * @todo Add more information in the JSDOC here\n */\nexport const drawNote = function (elem, note, conf, diagObj) {\n  log.debug('Rendering note ', note, conf);\n\n  const id = note.id;\n  const noteInfo = {\n    id: id,\n    text: note.text,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', id).attr('class', 'classGroup');\n\n  // add text\n  let text = g\n    .append('text')\n    .attr('y', conf.textHeight + conf.padding)\n    .attr('x', 0);\n\n  const lines = JSON.parse(`\"${note.text}\"`).split('\\n');\n\n  lines.forEach(function (line) {\n    log.debug(`Adding line: ${line}`);\n    text.append('tspan').text(line).attr('class', 'title').attr('dy', conf.textHeight);\n  });\n\n  const noteBox = g.node().getBBox();\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', noteBox.width + 2 * conf.padding)\n    .attr(\n      'height',\n      noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin\n    );\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  text.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  noteInfo.width = rectWidth;\n  noteInfo.height =\n    noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin;\n\n  return noteInfo;\n};\n\nexport const parseMember = function (text) {\n  const fieldRegEx = /^([#+~-])?(\\w+)(~\\w+~|\\[])?\\s+(\\w+) *([$*])?$/;\n  const methodRegEx = /^([#+|~-])?(\\w+) *\\( *(.*)\\) *([$*])? *(\\w*[[\\]|~]*\\s*\\w*~?)$/;\n\n  let fieldMatch = text.match(fieldRegEx);\n  let methodMatch = text.match(methodRegEx);\n\n  if (fieldMatch && !methodMatch) {\n    return buildFieldDisplay(fieldMatch);\n  } else if (methodMatch) {\n    return buildMethodDisplay(methodMatch);\n  } else {\n    return buildLegacyDisplay(text);\n  }\n};\n\nconst buildFieldDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let fieldType = parsedText[2] ? parsedText[2].trim() : '';\n    let genericType = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let fieldName = parsedText[4] ? parsedText[4].trim() : '';\n    let classifier = parsedText[5] ? parsedText[5].trim() : '';\n\n    displayText = visibility + fieldType + genericType + ' ' + fieldName;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildMethodDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let methodName = parsedText[2] ? parsedText[2].trim() : '';\n    let parameters = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let classifier = parsedText[4] ? parsedText[4].trim() : '';\n    let returnType = parsedText[5] ? ' : ' + parseGenericTypes(parsedText[5]).trim() : '';\n\n    displayText = visibility + methodName + '(' + parameters + ')' + returnType;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildLegacyDisplay = function (text) {\n  // if for some reason we don't have any match, use old format to parse text\n  let displayText = '';\n  let cssStyle = '';\n  let returnType = '';\n  let methodStart = text.indexOf('(');\n  let methodEnd = text.indexOf(')');\n\n  if (methodStart > 1 && methodEnd > methodStart && methodEnd <= text.length) {\n    let visibility = '';\n    let methodName = '';\n\n    let firstChar = text.substring(0, 1);\n    if (firstChar.match(/\\w/)) {\n      methodName = text.substring(0, methodStart).trim();\n    } else {\n      if (firstChar.match(/[#+~-]/)) {\n        visibility = firstChar;\n      }\n\n      methodName = text.substring(1, methodStart).trim();\n    }\n\n    const parameters = text.substring(methodStart + 1, methodEnd);\n    const classifier = text.substring(methodEnd + 1, 1);\n    cssStyle = parseClassifier(text.substring(methodEnd + 1, methodEnd + 2));\n\n    displayText = visibility + methodName + '(' + parseGenericTypes(parameters.trim()) + ')';\n\n    if (methodEnd < text.length) {\n      returnType = text.substring(methodEnd + 2).trim();\n      if (returnType !== '') {\n        returnType = ' : ' + parseGenericTypes(returnType);\n        displayText += returnType;\n      }\n    }\n  } else {\n    // finally - if all else fails, just send the text back as written (other than parsing for generic types)\n    displayText = parseGenericTypes(text);\n  }\n\n  return {\n    displayText,\n    cssStyle,\n  };\n};\n/**\n * Adds a <tspan> for a member in a diagram\n *\n * @param {SVGElement} textEl The element to append to\n * @param {string} txt The member\n * @param {boolean} isFirst\n * @param {{ padding: string; textHeight: string }} conf The configuration for the member\n */\nconst addTspan = function (textEl, txt, isFirst, conf) {\n  let member = parseMember(txt);\n\n  const tSpan = textEl.append('tspan').attr('x', conf.padding).text(member.displayText);\n\n  if (member.cssStyle !== '') {\n    tSpan.attr('style', member.cssStyle);\n  }\n\n  if (!isFirst) {\n    tSpan.attr('dy', conf.textHeight);\n  }\n};\n\n/**\n * Gives the styles for a classifier\n *\n * @param {'+' | '-' | '#' | '~' | '*' | '$'} classifier The classifier string\n * @returns {string} Styling for the classifier\n */\nconst parseClassifier = function (classifier) {\n  switch (classifier) {\n    case '*':\n      return 'font-style:italic;';\n    case '$':\n      return 'text-decoration:underline;';\n    default:\n      return '';\n  }\n};\n\nexport default {\n  drawClass,\n  drawEdge,\n  drawNote,\n  parseMember,\n};\n"],"names":["insertMarkers","elem","markerArray","type","id","forEach","markerName","markers","extension","log","append","attr","composition","aggregation","dependency","lollipop","point","style","circle$1","circle","cross","barb","insertMarkers$1","applyStyle","dom","styleFn","addHtmlLabel","node","fo","select","document","createElementNS","div","label","labelClass","isNode","html","labelStyle","createLabel","_vertexText","isTitle","vertexText","evaluate","getConfig","flowchart","htmlLabels","replace","decodeEntities","s","vertexNode","svgLabel","setAttribute","rows","split","Array","isArray","row","tspan","setAttributeNS","textContent","trim","appendChild","createLabel$1","labelHelper","parent","_classes","classes","useHtmlLabels","shapeSvg","insert","domId","labelText","textNode","text","labelType","createText","sanitizeText","width","wrappingWidth","bbox","getBBox","children","dv","getBoundingClientRect","height","halfPadding","padding","centerLabel","updateNodeBounds","element","insertPolygonShape","w","h","points","map","d","x","y","join","intersectNode","point2","intersect","intersectEllipse","rx","ry","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","intersectCircle","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","intersectPolygon","polyPoints","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","entry","min","left","top","i","length","intersect2","push","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","intersectRect","sx","sy","intersectRect$1","ellipse","polygon","rect","note","rect2","note$1","question","questionElem","choice","choice2","hexagon","f","m","hex","rect_left_inv_arrow","el","lean_right","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","cylinder","shape","pos","totalWidth","totalHeight","props","propKeys","Set","Object","keys","borders","applyNodePropertyBorders","delete","propKey","labelRect","strokeDashArray","addBorder","skipBorder","includes","rectWithTitle","innerLine","text2","flat","title","textRows","slice","titleBox","descr","stadium","circle2","doublecircle","gap","circleGroup","outerCircle","innerCircle","subroutine","start","forkJoin","dir","end","class_box","rowPadding","lineHeight","topLine","bottomLine","maxWidth","maxHeight","labelContainer","verticalPos","hasInterface","classData","annotations","interfaceLabelText","interfaceLabel","interfaceBBox","classTitleString","classTitleLabel","classTitleBBox","classAttributes","members","str","parsedInfo","parseMember","parsedText","displayText","lbl","cssStyle","classMethods","methods","diffX2","diffX","shapes","rhombus","fork","nodeElems","insertNode","newEl","link","target","securityLevel","linkTarget","tooltip","class","haveCallback","setNodeElem","clear$1","clear","positionNode","diff","clusterNode","edgeLabels","terminalLabels","insertEdgeLabel","edge","labelElement","addSvgBackground","edgeLabel","startLabelLeft","startLabelElement","startEdgeLabelLeft","inner","slBox","startLeft","setTerminalWidth","startLabelRight","startEdgeLabelRight","startRight","endLabelLeft","endLabelElement","endEdgeLabelLeft","endLeft","endLabelRight","endEdgeLabelRight","endRight","value","positionEdgeLabel","paths","path","updatedPath","originalPath","utils","arrowTypeStart","arrowTypeEnd","outsideNode","intersection","outsidePoint","insidePoint","JSON","stringify","r","Q","R","res","_x","_y","cutPathAtIntersect","_points","boundryNode","lastPointOutside","isInside","inter","pointPresent","some","e","insertEdge","clusterDb","diagramType","graph","pointsHasChanged","tail","v","head","unshift","toCluster","fromCluster","reverse","lineData","filter","isNaN","curve","curveBasis","lineFunction","line","strokeClasses","thickness","pattern","svgPath","url","arrowMarkerAbsolute","state","window","location","protocol","host","pathname","search","edgeCount","drawEdge","relation","conf","diagObj","getRelationType","db","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","LOLLIPOP","lineType","type1","type2","l","p1_card_x","p1_card_y","p2_card_x","p2_card_y","labelPosition","cardinality_1_point","cardinality_2_point","g","bounds","relationTitle1","relationTitle2","drawClass","classDef","classInfo","lookUpDomId","textHeight","isFirst","member","titleText2","classTitle","titleHeight","membersLine","dividerMargin","addTspan","membersBox","methodsLine","method","classBox","cssClassStr","cssClasses","rectWidth","childNodes","drawNote","noteInfo","lines","parse","line2","noteBox","fieldRegEx","methodRegEx","fieldMatch","match","methodMatch","buildFieldDisplay","buildMethodDisplay","buildLegacyDisplay","visibility","fieldType","genericType","parseGenericTypes","fieldName","classifier","parseClassifier","err","methodName","parameters","returnType","methodStart","indexOf","methodEnd","firstChar","substring","textEl","txt","tSpan","svgDraw"],"sourceRoot":""}