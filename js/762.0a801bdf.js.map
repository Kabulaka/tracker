{"version":3,"file":"js/762.0a801bdf.js","mappings":"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","sources":["webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/label/add-html-label.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/util.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/arrows.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/label/add-svg-label.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/label/add-label.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/create-clusters.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/create-edge-labels.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-node.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/create-nodes.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/position-clusters.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/position-edge-labels.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/position-nodes.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-ellipse.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-circle.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-rect.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/shapes.js","webpack://log-tracker/./node_modules/dagre-d3-es/src/dagre-js/render.js","webpack://log-tracker/../src/diagrams/flowchart/flowChartShapes.js","webpack://log-tracker/../src/diagrams/flowchart/flowRenderer.js","webpack://log-tracker/../src/diagrams/flowchart/flowDiagram.ts","webpack://log-tracker/../src/diagrams/flowchart/flowRenderer-v2.js","webpack://log-tracker/../src/diagrams/flowchart/styles.ts"],"sourcesContent":["import * as util from '../util.js';\n\nexport { addHtmlLabel };\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div.node().getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n","import * as _ from 'lodash-es';\n\n// Public utility functions\nexport { isSubgraph, edgeToId, applyStyle, applyClass, applyTransition };\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","import * as util from './util.js';\n\nexport { arrows, setArrows };\n\nvar arrows = {\n  normal,\n  vee,\n  undirected,\n};\n\nfunction setArrows(value) {\n  arrows = value;\n}\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 5 L 10 5')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n","import * as util from '../util.js';\n\nexport { addSVGLabel };\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","import * as util from '../util.js';\n\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append('tspan')\n      .attr('xml:space', 'preserve')\n      .attr('dy', '1em')\n      .attr('x', '1')\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","import { addHtmlLabel } from './add-html-label.js';\nimport { addSVGLabel } from './add-svg-label.js';\nimport { addTextLabel } from './add-text-label.js';\n\nexport { addLabel };\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g');\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n","import * as d3 from 'd3';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createClusters, setCreateClusters };\n\nvar createClusters = function (selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  var enterSelection = svgClusters\n    .enter()\n    .append('g')\n    .attr('class', 'cluster')\n    .attr('id', function (v) {\n      var node = g.node(v);\n      return node.id;\n    })\n    .style('opacity', 0)\n    .each(function (v) {\n      var node = g.node(v);\n      var thisGroup = d3.select(this);\n      d3.select(this).append('rect');\n      var labelGroup = thisGroup.append('g').attr('class', 'label');\n      addLabel(labelGroup, node, node.clusterLabelPos);\n    });\n\n  svgClusters = svgClusters.merge(enterSelection);\n\n  svgClusters = util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  return svgClusters;\n};\n\nfunction setCreateClusters(value) {\n  createClusters = value;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createEdgeLabels, setCreateEdgeLabels };\n\nlet createEdgeLabels = function (selection, g) {\n  var svgEdgeLabels = selection\n    .selectAll('g.edgeLabel')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n\n  svgEdgeLabels = selection.selectAll('g.edgeLabel');\n\n  svgEdgeLabels.each(function (e) {\n    var root = d3.select(this);\n    root.select('.label').remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n};\n\nfunction setCreateEdgeLabels(value) {\n  createEdgeLabels = value;\n}\n","export { intersectNode };\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { intersectNode } from './intersect/intersect-node.js';\nimport * as util from './util.js';\n\nexport { createEdgePaths, setCreateEdgePaths };\n\nvar createEdgePaths = function (selection, g, arrows) {\n  var previousPaths = selection\n    .selectAll('g.edgePath')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  var newPaths = enter(previousPaths, g);\n  exit(previousPaths, g);\n\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n  util.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(\n      domEdge,\n      edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\n    );\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3\n      .select(this)\n      .attr('marker-end', function () {\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n      })\n      .style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n};\n\nfunction setCreateEdgePaths(value) {\n  createEdgePaths = value;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  // @ts-expect-error\n  var line = (d3.line || d3.svg.line)()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  (line.curve || line.interpolate)(edge.curve);\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement\n    .getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter\n    .append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      var edge = g.edge(e);\n      var sourceElem = g.node(e.v).elem;\n      var points = _.range(edge.points.length).map(function () {\n        return getCoords(sourceElem);\n      });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append('defs');\n  return svgPathsEnter;\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createNodes, setCreateNodes };\n\nvar createNodes = function (selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection\n    .selectAll('g.node')\n    .data(simpleNodes, function (v) {\n      return v;\n    })\n    .classed('update', true);\n\n  svgNodes.exit().remove();\n\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n\n  svgNodes = selection.selectAll('g.node');\n\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    util.applyClass(\n      thisGroup,\n      node['class'],\n      (thisGroup.classed('update') ? 'update ' : '') + 'node'\n    );\n\n    thisGroup.select('g.label').remove();\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\n      'transform',\n      'translate(' +\n        (node.paddingLeft - node.paddingRight) / 2 +\n        ',' +\n        (node.paddingTop - node.paddingBottom) / 2 +\n        ')'\n    );\n\n    var root = d3.select(this);\n    root.select('.label-container').remove();\n    var shapeSvg = shape(root, bbox, node).classed('label-container', true);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  var exitSelection;\n\n  if (svgNodes.exit) {\n    exitSelection = svgNodes.exit();\n  } else {\n    exitSelection = svgNodes.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgNodes;\n};\n\nfunction setCreateNodes(value) {\n  createNodes = value;\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionClusters };\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util\n    .applyTransition(created.selectAll('rect'), g)\n    .attr('width', function (v) {\n      return g.node(v).width;\n    })\n    .attr('height', function (v) {\n      return g.node(v).height;\n    })\n    .attr('x', function (v) {\n      var node = g.node(v);\n      return -node.width / 2;\n    })\n    .attr('y', function (v) {\n      var node = g.node(v);\n      return -node.height / 2;\n    });\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { positionEdgeLabels };\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionNodes };\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","export { intersectEllipse };\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n","import { intersectEllipse } from './intersect-ellipse.js';\n\nexport { intersectCircle };\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","export { intersectLine };\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","import { intersectLine } from './intersect-line.js';\n\nexport { intersectPolygon };\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","export { intersectRect };\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n","import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\n\nexport { shapes, setShapes };\n\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond,\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('width', bbox.width)\n    .attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent\n    .insert('ellipse', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('rx', rx)\n    .attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent\n    .insert('circle', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2;\n  var h = (bbox.height * Math.SQRT2) / 2;\n  var points = [\n    { x: 0, y: -h },\n    { x: -w, y: 0 },\n    { x: 0, y: h },\n    { x: w, y: 0 },\n  ];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (p) {\n        return p.x + ',' + p.y;\n      })\n      .join(' ')\n  );\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { layout } from '../dagre/index.js';\nimport { arrows, setArrows } from './arrows.js';\nimport { createClusters, setCreateClusters } from './create-clusters.js';\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\nimport { createNodes, setCreateNodes } from './create-nodes.js';\nimport { positionClusters } from './position-clusters.js';\nimport { positionEdgeLabels } from './position-edge-labels.js';\nimport { positionNodes } from './position-nodes.js';\nimport { shapes, setShapes } from './shapes.js';\n\nexport { render };\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var fn = function (svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    setCreateNodes(value);\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    setCreateClusters(value);\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    setCreateEdgeLabels(value);\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    setCreateEdgePaths(value);\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    setShapes(value);\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    setArrows(value);\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  curve: d3.curveLinear,\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX,\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY,\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding,\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n","import { intersectPolygon } from 'dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js';\nimport { intersectRect } from 'dagre-d3-es/src/dagre-js/intersect/intersect-rect.js';\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction question(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const s = (w + h) * 0.9;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction hexagon(parent, bbox, node) {\n  const f = 4;\n  const h = bbox.height;\n  const m = h / f;\n  const w = bbox.width + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction rect_left_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction lean_right(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction lean_left(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction inv_trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction rect_right_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction stadium(parent, bbox, node) {\n  const h = bbox.height;\n  const w = bbox.width + h / 4;\n\n  const shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction subroutine(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction cylinder(parent, bbox, node) {\n  const w = bbox.width;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const shapeSvg = parent\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  node.intersect = function (point) {\n    const pos = intersectRect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjusted value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n}\n\n/** @param render */\nexport function addToRender(render) {\n  render.shapes().question = question;\n  render.shapes().hexagon = hexagon;\n  render.shapes().stadium = stadium;\n  render.shapes().subroutine = subroutine;\n  render.shapes().cylinder = cylinder;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().lean_right = lean_right;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().lean_left = lean_left;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().trapezoid = trapezoid;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().inv_trapezoid = inv_trapezoid;\n\n  // Add custom shape for box with inverted arrow on right side\n  render.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\n\n/** @param addShape */\nexport function addToRenderV2(addShape) {\n  addShape({ question });\n  addShape({ hexagon });\n  addShape({ stadium });\n  addShape({ subroutine });\n  addShape({ cylinder });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ rect_left_inv_arrow });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ lean_right });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ lean_left });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ trapezoid });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ inv_trapezoid });\n\n  // Add custom shape for box with inverted arrow on right side\n  addShape({ rect_right_inv_arrow });\n}\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n\nexport default {\n  addToRender,\n  addToRenderV2,\n};\n","import * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { select, curveLinear, selectAll } from 'd3';\nimport { getConfig } from '../../config';\nimport { render as Render } from 'dagre-d3-es';\nimport { applyStyle } from 'dagre-d3-es/src/dagre-js/util.js';\nimport { addHtmlLabel } from 'dagre-d3-es/src/dagre-js/label/add-html-label.js';\nimport { log } from '../../logger';\nimport common, { evaluate } from '../common/common';\nimport { interpolateToCurve, getStylesFromArray } from '../../utils';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\nimport flowChartShapes from './flowChartShapes';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\n\n/**\n * Function that adds the vertices found in the graph definition to the graph to be rendered.\n *\n * @param vert Object containing the vertices.\n * @param g The graph that is to be drawn.\n * @param svgId\n * @param root\n * @param _doc\n * @param diagObj\n */\nexport const addVertices = function (vert, g, svgId, root, _doc, diagObj) {\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n  const doc = !_doc ? document : _doc;\n  const keys = Object.keys(vert);\n\n  // Iterate through each item in the vertex object (containing all the vertices found) in the graph definition\n  keys.forEach(function (id) {\n    const vertex = vert[id];\n\n    /**\n     * Variable for storing the classes for the vertex\n     *\n     * @type {string}\n     */\n    let classStr = 'default';\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(' ');\n    }\n\n    const styles = getStylesFromArray(vertex.styles);\n\n    // Use vertex id as text in the box if no text is provided by the graph definition\n    let vertexText = vertex.text !== undefined ? vertex.text : vertex.id;\n\n    // We create a SVG label, either by delegating to addHtmlLabel or manually\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n      const node = {\n        label: vertexText.replace(\n          /fa[blrs]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        ),\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n      svgLabel.setAttribute('style', styles.labelStyle.replace('color:', 'fill:'));\n\n      const rows = vertexText.split(common.lineBreakRegex);\n\n      for (const row of rows) {\n        const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n        tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        tspan.setAttribute('dy', '1em');\n        tspan.setAttribute('x', '1');\n        tspan.textContent = row;\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n\n    let radious = 0;\n    let _shape = '';\n    // Set the shape based parameters\n    switch (vertex.type) {\n      case 'round':\n        radious = 5;\n        _shape = 'rect';\n        break;\n      case 'square':\n        _shape = 'rect';\n        break;\n      case 'diamond':\n        _shape = 'question';\n        break;\n      case 'hexagon':\n        _shape = 'hexagon';\n        break;\n      case 'odd':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'lean_right':\n        _shape = 'lean_right';\n        break;\n      case 'lean_left':\n        _shape = 'lean_left';\n        break;\n      case 'trapezoid':\n        _shape = 'trapezoid';\n        break;\n      case 'inv_trapezoid':\n        _shape = 'inv_trapezoid';\n        break;\n      case 'odd_right':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'circle':\n        _shape = 'circle';\n        break;\n      case 'ellipse':\n        _shape = 'ellipse';\n        break;\n      case 'stadium':\n        _shape = 'stadium';\n        break;\n      case 'subroutine':\n        _shape = 'subroutine';\n        break;\n      case 'cylinder':\n        _shape = 'cylinder';\n        break;\n      case 'group':\n        _shape = 'rect';\n        break;\n      default:\n        _shape = 'rect';\n    }\n    // Add the node\n    log.warn('Adding node', vertex.id, vertex.domId);\n    g.setNode(diagObj.db.lookUpDomId(vertex.id), {\n      labelType: 'svg',\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      label: vertexNode,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: diagObj.db.lookUpDomId(vertex.id),\n    });\n  });\n};\n\n/**\n * Add edges to graph based on parsed graph definition\n *\n * @param {object} edges The edges to add to the graph\n * @param {object} g The graph object\n * @param diagObj\n */\nexport const addEdges = function (edges, g, diagObj) {\n  let cnt = 0;\n\n  let defaultStyle;\n  let defaultLabelStyle;\n\n  if (edges.defaultStyle !== undefined) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n\n  edges.forEach(function (edge) {\n    cnt++;\n\n    // Identify Link\n    var linkId = 'L-' + edge.start + '-' + edge.end;\n    var linkNameStart = 'LS-' + edge.start;\n    var linkNameEnd = 'LE-' + edge.end;\n\n    const edgeData = {};\n\n    // Set link type for rendering\n    if (edge.type === 'arrow_open') {\n      edgeData.arrowhead = 'none';\n    } else {\n      edgeData.arrowhead = 'normal';\n    }\n\n    let style = '';\n    let labelStyle = '';\n\n    if (edge.style !== undefined) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      switch (edge.stroke) {\n        case 'normal':\n          style = 'fill:none';\n          if (defaultStyle !== undefined) {\n            style = defaultStyle;\n          }\n          if (defaultLabelStyle !== undefined) {\n            labelStyle = defaultLabelStyle;\n          }\n          break;\n        case 'dotted':\n          style = 'fill:none;stroke-width:2px;stroke-dasharray:3;';\n          break;\n        case 'thick':\n          style = ' stroke-width: 3.5px;fill:none';\n          break;\n      }\n    }\n\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n\n    if (edge.interpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n\n    if (edge.text === undefined) {\n      if (edge.style !== undefined) {\n        edgeData.arrowheadStyle = 'fill: #333';\n      }\n    } else {\n      edgeData.arrowheadStyle = 'fill: #333';\n      edgeData.labelpos = 'c';\n\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        edgeData.labelType = 'html';\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${\n          edgeData.labelStyle\n        }\">${edge.text.replace(\n          /fa[blrs]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        )}</span>`;\n      } else {\n        edgeData.labelType = 'text';\n        edgeData.label = edge.text.replace(common.lineBreakRegex, '\\n');\n\n        if (edge.style === undefined) {\n          edgeData.style = edgeData.style || 'stroke: #333; stroke-width: 1.5px;fill:none';\n        }\n\n        edgeData.labelStyle = edgeData.labelStyle.replace('color:', 'fill:');\n      }\n    }\n\n    edgeData.id = linkId;\n    edgeData.class = linkNameStart + ' ' + linkNameEnd;\n    edgeData.minlen = edge.length || 1;\n\n    // Add the edge to the graph\n    g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\n  });\n};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n *\n * @param text\n * @param diagObj\n * @returns {object} ClassDef styles\n */\nexport const getClasses = function (text, diagObj) {\n  log.info('Extracting classes');\n  diagObj.db.clear();\n  try {\n    // Parse the graph definition\n    diagObj.parse(text);\n    return diagObj.db.getClasses();\n  } catch (e) {\n    log.error(e);\n    return {};\n  }\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param text\n * @param id\n * @param _version\n * @param diagObj\n */\nexport const draw = function (text, id, _version, diagObj) {\n  log.info('Drawing flowchart');\n  diagObj.db.clear();\n  const { securityLevel, flowchart: conf } = getConfig();\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Parse the graph definition\n  try {\n    diagObj.parser.parse(text);\n  } catch (err) {\n    log.debug('Parsing failed');\n  }\n\n  // Fetch the default direction, use TD if none was found\n  let dir = diagObj.db.getDirection();\n  if (dir === undefined) {\n    dir = 'TD';\n  }\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: dir,\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 8,\n      marginy: 8,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  for (let i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    diagObj.db.addVertex(subG.id, subG.title, 'group', undefined, subG.classes);\n  }\n\n  // Fetch the vertices/nodes and edges/links from the parsed graph definition\n  const vert = diagObj.db.getVertices();\n  log.warn('Get vertices', vert);\n\n  const edges = diagObj.db.getEdges();\n\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n\n    selectAll('cluster').append('text');\n\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.warn(\n        'Setting subgraph',\n        subG.nodes[j],\n        diagObj.db.lookUpDomId(subG.nodes[j]),\n        diagObj.db.lookUpDomId(subG.id)\n      );\n      g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n    }\n  }\n  addVertices(vert, g, id, root, doc, diagObj);\n  addEdges(edges, g, diagObj);\n\n  // Create the renderer\n  const render = new Render();\n\n  // Add custom shapes\n  flowChartShapes.addToRender(render);\n\n  // Add our custom arrow - an empty arrowhead\n  render.arrows().none = function normal(parent, id, edge, type) {\n    const marker = parent\n      .append('marker')\n      .attr('id', id)\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 9)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto');\n\n    const path = marker.append('path').attr('d', 'M 0 0 L 0 0 L 0 0 z');\n    applyStyle(path, edge[type + 'Style']);\n  };\n\n  // Override normal arrowhead defined in d3. Remove style & add class to allow css styling.\n  render.arrows().normal = function normal(parent, id) {\n    const marker = parent\n      .append('marker')\n      .attr('id', id)\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 9)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto');\n\n    marker\n      .append('path')\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n      .attr('class', 'arrowheadPath')\n      .style('stroke-width', 1)\n      .style('stroke-dasharray', '1,0');\n  };\n\n  // Set up an SVG group so that we can translate the final graph.\n  const svg = root.select(`[id=\"${id}\"]`);\n\n  // Run the renderer. This is what draws the final graph.\n  const element = root.select('#' + id + ' g');\n  render(element, g);\n\n  element.selectAll('g.node').attr('title', function () {\n    return diagObj.db.getTooltip(this.id);\n  });\n\n  // Index nodes\n  diagObj.db.indexNodes('subGraph' + i);\n\n  // reposition labels\n  for (i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n    if (subG.title !== 'undefined') {\n      const clusterRects = doc.querySelectorAll(\n        '#' + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect'\n      );\n      const clusterEl = doc.querySelectorAll(\n        '#' + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]'\n      );\n\n      const xPos = clusterRects[0].x.baseVal.value;\n      const yPos = clusterRects[0].y.baseVal.value;\n      const _width = clusterRects[0].width.baseVal.value;\n      const cluster = select(clusterEl[0]);\n      const te = cluster.select('.label');\n      te.attr('transform', `translate(${xPos + _width / 2}, ${yPos + 14})`);\n      te.attr('id', id + 'Text');\n\n      for (let j = 0; j < subG.classes.length; j++) {\n        clusterEl[0].classList.add(subG.classes[j]);\n      }\n    }\n  }\n\n  // Add label rects for non html labels\n  if (!conf.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      // Get dimensions of label\n      const dim = label.getBBox();\n\n      const rect = doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      rect.setAttribute('rx', 0);\n      rect.setAttribute('ry', 0);\n      rect.setAttribute('width', dim.width);\n      rect.setAttribute('height', dim.height);\n      // rect.setAttribute('style', 'fill:#e8e8e8;');\n\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  setupGraphViewbox(g, svg, conf.diagramPadding, conf.useMaxWidth);\n\n  // If node has a link, wrap it in an anchor SVG object.\n  const keys = Object.keys(vert);\n  keys.forEach(function (key) {\n    const vertex = vert[key];\n\n    if (vertex.link) {\n      const node = root.select('#' + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\n      if (node) {\n        const link = doc.createElementNS('http://www.w3.org/2000/svg', 'a');\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'class', vertex.classes.join(' '));\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'href', vertex.link);\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'rel', 'noopener');\n        if (securityLevel === 'sandbox') {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', '_top');\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', vertex.linkTarget);\n        }\n\n        const linkNode = node.insert(function () {\n          return link;\n        }, ':first-child');\n\n        const shape = node.select('.label-container');\n        if (shape) {\n          linkNode.append(function () {\n            return shape.node();\n          });\n        }\n\n        const label = node.select('.label');\n        if (label) {\n          linkNode.append(function () {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\n\nexport default {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw,\n};\n","// @ts-ignore: TODO Fix ts errors\nimport flowParser from './parser/flow';\nimport flowDb from './flowDb';\nimport flowRenderer from './flowRenderer';\nimport flowRendererV2 from './flowRenderer-v2';\nimport flowStyles from './styles';\nimport { MermaidConfig } from '../../config.type';\n\nexport const diagram = {\n  parser: flowParser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: (cnf: MermaidConfig) => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    // TODO, broken as of 2022-09-14 (13809b50251845475e6dca65cc395761be38fbd2)\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    flowRenderer.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen('gen-1');\n  },\n};\n","import * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { select, curveLinear, selectAll } from 'd3';\n\nimport flowDb from './flowDb';\nimport { getConfig } from '../../config';\nimport utils from '../../utils';\n\nimport { render } from '../../dagre-wrapper/index.js';\nimport { addHtmlLabel } from 'dagre-d3-es/src/dagre-js/label/add-html-label.js';\nimport { log } from '../../logger';\nimport common, { evaluate } from '../common/common';\nimport { interpolateToCurve, getStylesFromArray } from '../../utils';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\n\n/**\n * Function that adds the vertices found during parsing to the graph to be rendered.\n *\n * @param vert Object containing the vertices.\n * @param g The graph that is to be drawn.\n * @param svgId\n * @param root\n * @param doc\n * @param diagObj\n */\nexport const addVertices = function (vert, g, svgId, root, doc, diagObj) {\n  const svg = root.select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(vert);\n\n  // Iterate through each item in the vertex object (containing all the vertices found) in the graph definition\n  keys.forEach(function (id) {\n    const vertex = vert[id];\n\n    /**\n     * Variable for storing the classes for the vertex\n     *\n     * @type {string}\n     */\n    let classStr = 'default';\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(' ');\n    }\n    classStr = classStr + ' flowchart-label';\n    const styles = getStylesFromArray(vertex.styles);\n\n    // Use vertex id as text in the box if no text is provided by the graph definition\n    let vertexText = vertex.text !== undefined ? vertex.text : vertex.id;\n\n    // We create a SVG label, either by delegating to addHtmlLabel or manually\n    let vertexNode;\n    log.info('vertex', vertex, vertex.labelType);\n    if (vertex.labelType === 'markdown') {\n      log.info('vertex', vertex, vertex.labelType);\n    } else {\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n        const node = {\n          label: vertexText.replace(\n            /fa[blrs]?:fa-[\\w-]+/g,\n            (s) => `<i class='${s.replace(':', ' ')}'></i>`\n          ),\n        };\n        vertexNode = addHtmlLabel(svg, node).node();\n        vertexNode.parentNode.removeChild(vertexNode);\n      } else {\n        const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        svgLabel.setAttribute('style', styles.labelStyle.replace('color:', 'fill:'));\n\n        const rows = vertexText.split(common.lineBreakRegex);\n\n        for (const row of rows) {\n          const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n          tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n          tspan.setAttribute('dy', '1em');\n          tspan.setAttribute('x', '1');\n          tspan.textContent = row;\n          svgLabel.appendChild(tspan);\n        }\n        vertexNode = svgLabel;\n      }\n    }\n\n    let radious = 0;\n    let _shape = '';\n    // Set the shape based parameters\n    switch (vertex.type) {\n      case 'round':\n        radious = 5;\n        _shape = 'rect';\n        break;\n      case 'square':\n        _shape = 'rect';\n        break;\n      case 'diamond':\n        _shape = 'question';\n        break;\n      case 'hexagon':\n        _shape = 'hexagon';\n        break;\n      case 'odd':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'lean_right':\n        _shape = 'lean_right';\n        break;\n      case 'lean_left':\n        _shape = 'lean_left';\n        break;\n      case 'trapezoid':\n        _shape = 'trapezoid';\n        break;\n      case 'inv_trapezoid':\n        _shape = 'inv_trapezoid';\n        break;\n      case 'odd_right':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'circle':\n        _shape = 'circle';\n        break;\n      case 'ellipse':\n        _shape = 'ellipse';\n        break;\n      case 'stadium':\n        _shape = 'stadium';\n        break;\n      case 'subroutine':\n        _shape = 'subroutine';\n        break;\n      case 'cylinder':\n        _shape = 'cylinder';\n        break;\n      case 'group':\n        _shape = 'rect';\n        break;\n      case 'doublecircle':\n        _shape = 'doublecircle';\n        break;\n      default:\n        _shape = 'rect';\n    }\n    // Add the node\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText: vertexText,\n      labelType: vertex.labelType,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      link: vertex.link,\n      linkTarget: vertex.linkTarget,\n      tooltip: diagObj.db.getTooltip(vertex.id) || '',\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      haveCallback: vertex.haveCallback,\n      width: vertex.type === 'group' ? 500 : undefined,\n      dir: vertex.dir,\n      type: vertex.type,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding,\n    });\n\n    log.info('setNode', {\n      labelStyle: styles.labelStyle,\n      labelType: vertex.labelType,\n      shape: _shape,\n      labelText: vertexText,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      width: vertex.type === 'group' ? 500 : undefined,\n      type: vertex.type,\n      dir: vertex.dir,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding,\n    });\n  });\n};\n\n/**\n * Add edges to graph based on parsed graph definition\n *\n * @param {object} edges The edges to add to the graph\n * @param {object} g The graph object\n * @param diagObj\n */\nexport const addEdges = function (edges, g, diagObj) {\n  log.info('abc78 edges = ', edges);\n  let cnt = 0;\n  let linkIdCnt = {};\n\n  let defaultStyle;\n  let defaultLabelStyle;\n\n  if (edges.defaultStyle !== undefined) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n\n  edges.forEach(function (edge) {\n    cnt++;\n\n    // Identify Link\n    var linkIdBase = 'L-' + edge.start + '-' + edge.end;\n    // count the links from+to the same node to give unique id\n    if (linkIdCnt[linkIdBase] === undefined) {\n      linkIdCnt[linkIdBase] = 0;\n      log.info('abc78 new entry', linkIdBase, linkIdCnt[linkIdBase]);\n    } else {\n      linkIdCnt[linkIdBase]++;\n      log.info('abc78 new entry', linkIdBase, linkIdCnt[linkIdBase]);\n    }\n    let linkId = linkIdBase + '-' + linkIdCnt[linkIdBase];\n    log.info('abc78 new link id to be used is', linkIdBase, linkId, linkIdCnt[linkIdBase]);\n    var linkNameStart = 'LS-' + edge.start;\n    var linkNameEnd = 'LE-' + edge.end;\n\n    const edgeData = { style: '', labelStyle: '' };\n    edgeData.minlen = edge.length || 1;\n    //edgeData.id = 'id' + cnt;\n\n    // Set link type for rendering\n    if (edge.type === 'arrow_open') {\n      edgeData.arrowhead = 'none';\n    } else {\n      edgeData.arrowhead = 'normal';\n    }\n\n    // Check of arrow types, placed here in order not to break old rendering\n    edgeData.arrowTypeStart = 'arrow_open';\n    edgeData.arrowTypeEnd = 'arrow_open';\n\n    /* eslint-disable no-fallthrough */\n    switch (edge.type) {\n      case 'double_arrow_cross':\n        edgeData.arrowTypeStart = 'arrow_cross';\n      case 'arrow_cross':\n        edgeData.arrowTypeEnd = 'arrow_cross';\n        break;\n      case 'double_arrow_point':\n        edgeData.arrowTypeStart = 'arrow_point';\n      case 'arrow_point':\n        edgeData.arrowTypeEnd = 'arrow_point';\n        break;\n      case 'double_arrow_circle':\n        edgeData.arrowTypeStart = 'arrow_circle';\n      case 'arrow_circle':\n        edgeData.arrowTypeEnd = 'arrow_circle';\n        break;\n    }\n\n    let style = '';\n    let labelStyle = '';\n\n    switch (edge.stroke) {\n      case 'normal':\n        style = 'fill:none;';\n        if (defaultStyle !== undefined) {\n          style = defaultStyle;\n        }\n        if (defaultLabelStyle !== undefined) {\n          labelStyle = defaultLabelStyle;\n        }\n        edgeData.thickness = 'normal';\n        edgeData.pattern = 'solid';\n        break;\n      case 'dotted':\n        edgeData.thickness = 'normal';\n        edgeData.pattern = 'dotted';\n        edgeData.style = 'fill:none;stroke-width:2px;stroke-dasharray:3;';\n        break;\n      case 'thick':\n        edgeData.thickness = 'thick';\n        edgeData.pattern = 'solid';\n        edgeData.style = 'stroke-width: 3.5px;fill:none;';\n        break;\n      case 'invisible':\n        edgeData.thickness = 'invisible';\n        edgeData.pattern = 'solid';\n        edgeData.style = 'stroke-width: 0;fill:none;';\n        break;\n    }\n    if (edge.style !== undefined) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    }\n\n    edgeData.style = edgeData.style += style;\n    edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n\n    if (edge.interpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n\n    if (edge.text === undefined) {\n      if (edge.style !== undefined) {\n        edgeData.arrowheadStyle = 'fill: #333';\n      }\n    } else {\n      edgeData.arrowheadStyle = 'fill: #333';\n      edgeData.labelpos = 'c';\n    }\n\n    edgeData.labelType = edge.labelType;\n    edgeData.label = edge.text.replace(common.lineBreakRegex, '\\n');\n\n    if (edge.style === undefined) {\n      edgeData.style = edgeData.style || 'stroke: #333; stroke-width: 1.5px;fill:none;';\n    }\n\n    edgeData.labelStyle = edgeData.labelStyle.replace('color:', 'fill:');\n\n    edgeData.id = linkId;\n    edgeData.classes = 'flowchart-link ' + linkNameStart + ' ' + linkNameEnd;\n\n    // Add the edge to the graph\n    g.setEdge(edge.start, edge.end, edgeData, cnt);\n  });\n};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n *\n * @param text\n * @param diagObj\n * @returns {object} ClassDef styles\n */\nexport const getClasses = function (text, diagObj) {\n  log.info('Extracting classes');\n  diagObj.db.clear();\n  try {\n    // Parse the graph definition\n    diagObj.parse(text);\n    return diagObj.db.getClasses();\n  } catch (e) {\n    return;\n  }\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param text\n * @param id\n */\n\nexport const draw = function (text, id, _version, diagObj) {\n  log.info('Drawing flowchart');\n  diagObj.db.clear();\n  flowDb.setGen('gen-2');\n  // Parse the graph definition\n  diagObj.parser.parse(text);\n\n  // Fetch the default direction, use TD if none was found\n  let dir = diagObj.db.getDirection();\n  if (dir === undefined) {\n    dir = 'TD';\n  }\n\n  const { securityLevel, flowchart: conf } = getConfig();\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  // Handle root and document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: dir,\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 0,\n      marginy: 0,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  log.info('Subgraphs - ', subGraphs);\n  for (let i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    log.info('Subgraph - ', subG);\n    diagObj.db.addVertex(\n      subG.id,\n      { text: subG.title, type: subG.labelType },\n      'group',\n      undefined,\n      subG.classes,\n      subG.dir\n    );\n  }\n\n  // Fetch the vertices/nodes and edges/links from the parsed graph definition\n  const vert = diagObj.db.getVertices();\n\n  const edges = diagObj.db.getEdges();\n\n  log.info('Edges', edges);\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    // for (let i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n\n    selectAll('cluster').append('text');\n\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.info('Setting up subgraphs', subG.nodes[j], subG.id);\n      g.setParent(subG.nodes[j], subG.id);\n    }\n  }\n  addVertices(vert, g, id, root, doc, diagObj);\n  addEdges(edges, g, diagObj);\n\n  // Add custom shapes\n  // flowChartShapes.addToRenderV2(addShape);\n\n  // Set up an SVG group so that we can translate the final graph.\n  const svg = root.select(`[id=\"${id}\"]`);\n\n  // Run the renderer. This is what draws the final graph.\n  const element = root.select('#' + id + ' g');\n  render(element, g, ['point', 'circle', 'cross'], 'flowchart', id);\n\n  utils.insertTitle(svg, 'flowchartTitleText', conf.titleTopMargin, diagObj.db.getDiagramTitle());\n\n  setupGraphViewbox(g, svg, conf.diagramPadding, conf.useMaxWidth);\n\n  // Index nodes\n  diagObj.db.indexNodes('subGraph' + i);\n\n  // Add label rects for non html labels\n  if (!conf.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      // Get dimensions of label\n      const dim = label.getBBox();\n\n      const rect = doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      rect.setAttribute('rx', 0);\n      rect.setAttribute('ry', 0);\n      rect.setAttribute('width', dim.width);\n      rect.setAttribute('height', dim.height);\n\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n\n  // If node has a link, wrap it in an anchor SVG object.\n  const keys = Object.keys(vert);\n  keys.forEach(function (key) {\n    const vertex = vert[key];\n\n    if (vertex.link) {\n      const node = select('#' + id + ' [id=\"' + key + '\"]');\n      if (node) {\n        const link = doc.createElementNS('http://www.w3.org/2000/svg', 'a');\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'class', vertex.classes.join(' '));\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'href', vertex.link);\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'rel', 'noopener');\n        if (securityLevel === 'sandbox') {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', '_top');\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', vertex.linkTarget);\n        }\n\n        const linkNode = node.insert(function () {\n          return link;\n        }, ':first-child');\n\n        const shape = node.select('.label-container');\n        if (shape) {\n          linkNode.append(function () {\n            return shape.node();\n          });\n        }\n\n        const label = node.select('.label');\n        if (label) {\n          linkNode.append(function () {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\n\nexport default {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw,\n};\n","/** Returns the styles given options */\nexport interface FlowChartStyleOptions {\n  arrowheadColor: string;\n  border2: string;\n  clusterBkg: string;\n  clusterBorder: string;\n  edgeLabelBackground: string;\n  fontFamily: string;\n  lineColor: string;\n  mainBkg: string;\n  nodeBorder: string;\n  nodeTextColor: string;\n  tertiaryColor: string;\n  textColor: string;\n  titleColor: string;\n}\n\nconst getStyles = (options: FlowChartStyleOptions) =>\n  `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\n\nexport default getStyles;\n"],"names":["addHtmlLabel","root","node","fo","append","attr","div","label","insert","html","util","labelStyle","style","client","getBoundingClientRect","width","height","isSubgraph","g","v","children","length","edgeToId","e","escapeId","w","name","ID_DELIM","str","String","replace","applyStyle","dom","styleFn","applyClass","classFn","otherClasses","applyTransition","selection","graph","_","transition","arrows","normal","vee","undirected","setArrows","value","parent","id","edge","type","marker","path","addSVGLabel","domNode","appendChild","addTextLabel","lines","processEscapeSequences","split","i","text","ch","newText","escaped","addLabel","location","labelSvg","labelType","y","labelBBox","getBBox","createClusters","clusters","nodes","filter","svgClusters","selectAll","data","exit","remove","enterSelection","enter","each","thisGroup","d3","this","labelGroup","clusterLabelPos","merge","c","domCluster","setCreateClusters","createEdgeLabels","exitSelection","svgEdgeLabels","edges","classed","select","bbox","labelId","setCreateEdgeLabels","intersectNode","point","intersect","createEdgePaths","previousPaths","newPaths","svgPaths","undefined","domEdge","elem","arrowheadId","makeFragmentRef","href","calcPoints","arrowhead","setCreateEdgePaths","url","fragmentId","baseUrl","tail","head","points","slice","unshift","push","createLine","line","x","d","curve","interpolate","getCoords","matrix","ownerSVGElement","getScreenCTM","inverse","multiply","translate","f","svgPathsEnter","sourceElem","map","svgPathExit","createNodes","shapes","simpleNodes","svgNodes","labelDom","shape","paddingLeft","paddingRight","paddingTop","paddingBottom","shapeSvg","shapeBBox","setCreateNodes","positionClusters","created","positionEdgeLabels","positionNodes","intersectEllipse","rx","ry","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","intersectCircle","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","intersectPolygon","polyPoints","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","forEach","entry","min","left","top","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","console","log","intersectRect","sx","sy","h","rect","ellipse","circle","diamond","setShapes","r","max","SQRT2","join","render","fn","svg","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","layout","postProcessGraph","arguments","NODE_DEFAULT_ATTRS","EDGE_DEFAULT_ATTRS","paddingX","paddingY","padding","k","_prevWidth","_prevHeight","empty","question","s","insertPolygonShape","hexagon","m","rect_left_inv_arrow","lean_right","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","stadium","subroutine","cylinder","pos","addToRender","render2","addToRenderV2","addShape","flowChartShapes","conf","setConf","cnf","keys","Object","key","addVertices","vert","svgId","_doc","diagObj","doc","document","vertex","classStr","classes","styles","getStylesFromArray","vertexNode","vertexText","evaluate","getConfig","flowchart","htmlLabels","parentNode","removeChild","svgLabel","createElementNS","setAttribute","rows","common","row","tspan","setAttributeNS","textContent","radious","_shape","domId","setNode","db","lookUpDomId","class","addEdges","defaultStyle","defaultLabelStyle","cnt","defaultStyles","linkId","start","end","linkNameStart","linkNameEnd","edgeData","stroke","interpolateToCurve","curveLinear","defaultInterpolate","arrowheadStyle","labelpos","minlen","setEdge","getClasses","clear","parse","draw","_version","securityLevel","conf2","sandboxElement","contentDocument","body","parser","err","dir","getDirection","nodeSpacing","rankSpacing","graphlib","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","subG","subGraphs","getSubGraphs","i2","addVertex","title","getVertices","getEdges","j","setParent","render$1","none","id2","element","getTooltip","indexNodes","clusterRects","querySelectorAll","clusterEl","xPos","baseVal","yPos","_width","cluster","te","classList","add","labels","dim","insertBefore","firstChild","setupGraphViewbox","diagramPadding","useMaxWidth","link","linkTarget","linkNode","flowRenderer","diagram","flowDb","renderer","flowRendererV2","flowStyles","init","arrowMarkerAbsolute","labelText","tooltip","haveCallback","props","linkIdCnt","linkIdBase","arrowTypeStart","arrowTypeEnd","thickness","pattern","utils","titleTopMargin","getDiagramTitle","getStyles","options","fontFamily","nodeTextColor","textColor","titleColor","mainBkg","nodeBorder","arrowheadColor","lineColor","edgeLabelBackground","clusterBkg","clusterBorder","tertiaryColor","border2"],"sourceRoot":""}